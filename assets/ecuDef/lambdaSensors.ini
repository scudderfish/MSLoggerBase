; David Hooke's list of shortcuts:
;  Another way of doing it for the Tech Edge linear output:
;  afr = { 9.0 + 0.039216 * egoADC } ; WBLIN, Mot ADC
;  afr = { 9.0 + 0.039063 * egoADC } ; WBLIN, AVR ADC
;
;  For the Lambdaboy thingy, the three points given
;  (11=2.05, 14.7=4.21, 16=4.98) are damn close to a straight line.
;  Without seeing a graph or table of it, I'd guess it's a linear
;  output from AFR of 7.5 to 16 (0V to 5V), which gives:
;  afr = { 7.5 + 0.0335875 * egoADC } ; LBoy, MOT ADC
;  afr = { 7.5 + 0.0334563 * egoADC } ; LBoy, AVR ADC
;
; http://www.plxdevices.com/M-Series_productinfo.htm
; afr = { 10.0 + 0.039216 * egoADC } ; PLX WB, Mot ADC


[OutputChannels]

#if   NARROW_BAND_EGO
   afr              = { table(egoADC,    "NBafr100.inc") / 100.0     }
   lambda           = { afr / 14.7                                   }
   TargetAFR        = { table(afrtarget, "NBafr100.inc") / 100.0     }
   TargetLambda     = { TargetAFR / 14.7                             }

#elif WB_1_0_LINEAR
   lambda           = { 1.5 - 5.0 * egoADC/255.0                     }
   afr              = { 1.5 - 5.0 * egoADC/255.0  * 14.7                                }
   TargetLambda     = { 1.5 - 5.0 * afrtarget/255.0                  }
   TargetAFR        = { TargetLambda * 14.7                          }

#elif WB_UNKNOWN
   afr              = { egoADC * 0.01961                             }
   lambda           = { afr / 14.7                                   }
   TargetAFR        = { afrtarget * 0.01961                          }
   TargetLambda     = { TargetAFR / 14.7                             }

#elif DIYWB_NON_LINEAR 
   lambda           = { table(egoADC, "WBlambda100MOT.inc") / 100.0  }
   afr              = { (table(egoADC, "WBlambda100MOT.inc") / 100.0 ) * 14.7                                }
   TargetLambda     = { table(afrtarget,"WBlambda100MOT.inc") / 100.0}
   TargetAFR        = { TargetLambda * 14.7                          }

#elif DYNOJET_LINEAR
   afr              = { egoADC    * 0.031373 + 10                    }
   lambda           = { afr / 14.7                                   }
   TargetLambda     = { TargetAFR / 14.7                             }
   TargetAFR        = { afrtarget * 0.031373 + 10                    }

#elif TECHEDGE_LINEAR
   afr              = { egoADC    * 0.039216 + 9                     }
   lambda           = { afr / 14.7                                   }
   TargetAFR        = { afrtarget * 0.039216 + 9                     }
   TargetLambda     = { TargetAFR / 14.7                             }

#elif INNOVATE_1_2_LINEAR
   afr              = { egoADC    * 0.1961                           }
   lambda           = { afr       / 14.7                             }
   TargetAFR        = { afrtarget * 0.1961                           }
   TargetLambda     = { TargetAFR / 14.7                             }

#elif INNOVATE_0_5_LINEAR
   afr              = { 10 + (egoADC    * 0.039216)                  }
   lambda           = { afr       / 14.7                             }
   TargetAFR        = { 10 + (afrtarget * 0.039216)                  }
   TargetLambda     = { TargetAFR / 14.7                             }

#elif INNOVATE_LC1_DEFAULT
   ; 0.0v = 0.5 lambda =  7.35:1 AFR
   ; 5.0v = 1.523 lambda = 22.39:1 AFR
   ; afr  = 7.35 + (egoADC    * 0.0589804) 
   afr              = { 7.35 + (egoADC    * 0.0589804)               }
   lambda           = { afr       / 14.7                             }
   TargetLambda     = { afrtarget/255.0 + 0.5                        }
   TargetAFR        = { TargetLambda * 14.7                          }

#elif ZEITRONIX_NON_LINEAR
   afr              = { table(egoADC,   "WBafr100Zeit.inc") / 100.0  }
   lambda           = { afr          / 14.7                          }
   TargetAFR        = { table(afrtarget,"WBafr100Zeit.inc") / 100.0  }
   TargetLambda     = { TargetLambda / 14.7                          }

#elif AEM_LINEAR
   afr              = { 9.72 + (egoADC    * 0.038666)                }
   lambda           = { afr       / 14.7                             }
   TargetAFR        = { 9.72 + (afrtarget * 0.038666 )               }
   TargetLambda     = { TargetAFR / 14.7                             }

#elif AEM_NON_LINEAR
   ;afr              = { 8.44350 + (egoADC    * (1.02541E-02 + egoADC    * (1.92111E-04 + egoADC    * (-1.38363E-06 + egoADC    * 4.42977E-09)))) }
   afr              = { 8.44350 + (egoADC    * (0.012541 + egoADC    * (0.000192111 + egoADC    * (-0.00000138363 + egoADC    * 0.00000000442977)))) }
   lambda           = { afr       / 14.7                             }
   TargetAFR        = { 8.44350 + (afrtarget * (0.0102541 + afrtarget * (0.000192111 + afrtarget * (-0.00000138363 + afrtarget * 0.00000000442977)))) }
   TargetLambda     = { TargetAFR / 14.7                             }

#elif NGK_AFX
   afr              = { (egoADC * 0.0270592) + 9                           }
   lambda           = { afr       / 14.7                             }
   TargetAFR        = { (afrtarget * 0.0270592) + 9                        }
   TargetLambda     = { TargetAFR / 14.7                             }
#endif
