;-------------------------------------------------------------------------------
; $Id: ms3.ini,v 1.251 2012/03/26 20:44:46 jsmcortina Exp $
;
; This ini file is Copyright 2007,2008,2009,2010 James Murray and Kenneth Culver.
; It is only to be used with a genuine B&G MS3.
;
; configuration defines
;Normally these next lines should be UNset

;This enables the "full" CAN/serial commands so this INI can be used anywhere on the CAN network.
#unset CAN_COMMANDS

#unset EXPANDED_CLT_TEMP   ; change this line to SET if you want to use the extended range
#unset INI_VERSION_2 ; this is set by TunerStudio, but needs to be unset for Megatune to work

#set MPH       ; unset for kph
#set METRES    ;unset for inches in wheel size
#unset INTERNAL_LOG_FIELDS
#unset USE_CRC_DATA_CHECK
#unset PW_4X
#unset CYL_12_16_SUPPORT

[MegaTune]
   MTversion      = 2.25 ; MegaTune itself; needs to match exec version.

   versionInfo    = "S"  ; Put this in the title bar.
   queryCommand   = "Q"  ; Verify against signature.
   signature      = "MS3 Format 0233.003" ; MS-II sends a null at 20th byte.
                   ; 123456789.123456789.

;----------------------------------------------------------------------------
#if INI_VERSION_2
; ok
#else
 #error Megatune cannot be used with MS3 - please upgrade to TunerStudio
#endif

[Constants]


; updated settings from "new" serial
   pageActivationDelay = 1
   blockReadTimeout = 300
; next two from TS 1.18.1 testing
   writeBlocks = on
   interWriteDelay = 0


   endianness          = big
   nPages              = 14
   pageSize            = 1024,                1024,                1024,                1024,	     1024,	       1024,	        1024,	          1024,              1024,              1024,              1024,               1024,             1024,              1024
   pageIdentifier      = "\$tsCanId\x04",   "\$tsCanId\x05",  "\$tsCanId\x08",   "\$tsCanId\x09",   "\$tsCanId\x0a",  "\$tsCanId\x0b",  "\$tsCanId\x0c",  "\$tsCanId\x0d",   "\$tsCanId\x12",  "\$tsCanId\x13",   "\$tsCanId\x15",   "\$tsCanId\x16",   "\$tsCanId\x17",   "\$tsCanId\x18"
   burnCommand         = "b%2i",            "b%2i",           "b%2i",            "b%2i",            "b%2i",           "b%2i",           "b%2i",           "b%2i",            "b%2i",           "b%2i",            "b%2i",            "b%2i",            "b%2i",            "b%2i"
   pageReadCommand     = "r%2i%2o%2c",      "r%2i%2o%2c",     "r%2i%2o%2c",      "r%2i%2o%2c",      "r%2i%2o%2c",     "r%2i%2o%2c",     "r%2i%2o%2c",     "r%2i%2o%2c",      "r%2i%2o%2c",     "r%2i%2o%2c",      "r%2i%2o%2c",      "r%2i%2o%2c",      "r%2i%2o%2c",      "r%2i%2o%2c"
   pageValueWrite      = "w%2i%2o%2c%v",    "w%2i%2o%2c%v",   "w%2i%2o%2c%v",    "w%2i%2o%2c%v",    "w%2i%2o%2c%v",   "w%2i%2o%2c%v",   "w%2i%2o%2c%v",   "w%2i%2o%2c%v",    "w%2i%2o%2c%v",   "w%2i%2o%2c%v",    "w%2i%2o%2c%v",    "w%2i%2o%2c%v",    "w%2i%2o%2c%v",    "w%2i%2o%2c%v"
   pageChunkWrite      = "w%2i%2o%2c%v",    "w%2i%2o%2c%v",   "w%2i%2o%2c%v",    "w%2i%2o%2c%v",    "w%2i%2o%2c%v",   "w%2i%2o%2c%v",   "w%2i%2o%2c%v" ,  "w%2i%2o%2c%v",    "w%2i%2o%2c%v",   "w%2i%2o%2c%v",    "w%2i%2o%2c%v",    "w%2i%2o%2c%v",    "w%2i%2o%2c%v",    "w%2i%2o%2c%v"
#if USE_CRC_DATA_CHECK
   crc32CheckCommand   = "k%2i\x00\x00\x00\x04",   "k%2i\x00\x00\x00\x04",   "k%2i\x00\x00\x00\x04",   "k%2i\x00\x00\x00\x04",   "k%2i\x00\x00\x00\x04", "k%2i\x00\x00\x00\x04", "k%2i\x00\x00\x00\x04", "k%2i\x00\x00\x00\x04", "k%2i\x00\x00\x00\x04", "k%2i\x00\x00\x00\x04", "k%2i\x00\x00\x00\x04", "k%2i\x00\x00\x00\x04", "k%2i\x00\x00\x00\x04", "k%2i\x00\x00\x00\x04"
#endif

; new serial
   messageEnvelopeFormat = msEnvelope_1.0 

   page = 1
   ;  name            = class,  type, offset,      shape,  units,       scale, translate,    lo,      hi, digits
      nCylinders      = bits,    U08,      0,      [0:4], "INVALID","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID"
      no_skip_pulses  = scalar,  U08,      1,             "",         1.00000,   0.00000,  1.00,  10.00,      0 ; * (  1 byte)
      ICIgnCapture    = bits,    U08,      2,      [0:0], "Falling Edge", "Rising Edge"                          ; ICIgnOption
      engineType      = bits,    U08,      2,      [3:3], "Even fire", "Odd fire"
      spkout_hi_lo    = bits,    U08,      2,      [4:4], "Going Low (Normal)", "Going High (Inverted)"          ; *
      max_coil_dur    = scalar,  U08,      3,             "ms",       0.1000,   0.00000,  1.00,    8.00,      1 ; * (  1 byte)
      max_spk_dur     = scalar,  U08,      4,             "ms",       0.1000,   0.00000,  0.00,   25.50,      1 ; * (  1 byte)

      dwellAcc        = scalar,  U08,      5,             "ms",       0.1000,   0.00000,  0.00,   25.50,      0 ; * (  1 byte)
      crankingRPM     = scalar,  S16,     6,             "RPM",      1.00000,   0.00000,  0.00,  3000.0,      0 ; * (  2 bytes)
      triggerOffset   = scalar,  S16,     8,             "deg",      0.10000,   0.00000, -90.0,  180.00,      2 ; * (  2 bytes)
      TpsBypassCLTRevlim = scalar, S16,   10,             "TPS %",    0.10000,   0.00000, 0,      100,         1 ; * (  2 bytes)
      RevLimRpm2      = scalar,  S16,     12,             "RPM",      1.00000,   0.00000,  0.00,{rpmhigh},      0 ; * (  2 bytes)
      map0            = scalar,  S16,    14,             "%",      0.10000,   0.00000, -100.0, 3276.7,      1 ; * (  2 bytes)
